import sys
import math
input = sys.stdin.readline

x1, y1, x2, y2, x3, y3 = map(int, input().split())

a = [[x1, y1], [x2, y2], [x3, y3]]
a.sort(key=lambda x: x[0])

d1 = (a[0][0]-a[2][0])/(a[0][1]-a[2][1])
k1 = a[0][1] - d1 * a[0][0]

d2 = (a[0][0] - a[1][0]) / (a[0][1] - a[1][1])
k2 = a[0][1] - d2 * a[0][0]

d3 = (a[2][0] - a[1][0]) / (a[2][1] - a[1][1])
k3 = a[1][1] - d3 * a[1][0]

ans = 0

if d1*a[1][0] + k1 > a[1][1]:
    ans += (((a[0][0])**2)*d1*(1/2) + k1*a[0][0] - ((a[2][0])**2)*d1*(1/2) + k1*a[2][0])
    ans -= (((a[0][0])**2)*d2*(1/2) + k2*a[0][0] - ((a[1][0])**2)*d2*(1/2) + k2*a[1][0])
    ans -= (((a[1][0])**2)*d3*(1/2) + k3*a[1][0] - ((a[1][0])**2)*d3*(1/2) + k3*a[1][0])
else:
    ans -= (((a[0][0]) ** 2) * d1 * (1 / 2) + k1 * a[0][0] - ((a[2][0]) ** 2) * d1 * (1 / 2) + k1 * a[2][0])
    ans += (((a[0][0]) ** 2) * d2 * (1 / 2) + k2 * a[0][0] - ((a[1][0]) ** 2) * d2 * (1 / 2) + k2 * a[1][0])
    ans += (((a[1][0]) ** 2) * d3 * (1 / 2) + k3 * a[1][0] - ((a[1][0]) ** 2) * d3 * (1 / 2) + k3 * a[1][0])

ans *= math.pi

a = [[-x1, -y1], [-x2, -y2], [-x3, -y3]]
a.sort(key=lambda x: x[0])

d1 = (a[0][1]-a[2][1])/(a[0][0]-a[2][0])
k1 = a[0][1] - d1 * a[0][0]
d2 = (a[0][1] - a[1][1])/(a[0][0] - a[1][0])
k2 = a[0][1] - d2 * a[0][0]
d3 = (a[2][1] - a[1][1])/(a[2][0] - a[1][0])
k3 = a[1][1] - d3 * a[1][0]

ans_1 = 0

if d1*a[1][0] + k1 > a[1][1]:
    ans_1 += (((a[0][0])**2)*d1*(1/2) + k1*a[0][0] - ((a[2][0])**2)*d1*(1/2) + k1*a[2][0])
    ans_1 -= (((a[0][0])**2)*d2*(1/2) + k2*a[0][0] - ((a[1][0])**2)*d2*(1/2) + k2*a[1][0])
    ans_1 -= (((a[1][0])**2)*d3*(1/2) + k3*a[1][0] - ((a[1][0])**2)*d3*(1/2) + k3*a[1][0])
else:
    ans_1 -= (((a[0][0]) ** 2) * d1 * (1 / 2) + k1 * a[0][0] - ((a[2][0]) ** 2) * d1 * (1 / 2) + k1 * a[2][0])
    ans_1 += (((a[0][0]) ** 2) * d2 * (1 / 2) + k2 * a[0][0] - ((a[1][0]) ** 2) * d2 * (1 / 2) + k2 * a[1][0])
    ans_1 += (((a[1][0]) ** 2) * d3 * (1 / 2) + k3 * a[1][0] - ((a[1][0]) ** 2) * d3 * (1 / 2) + k3 * a[1][0])
ans_1 *= math.pi
print(ans, ans_1)